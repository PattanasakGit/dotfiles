#!/bin/bash

# Git Dotfiles Setup Script
# ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Mac/Linux

set -e

echo "üîß ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Git Configuration..."

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ Git ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
if ! command -v git &> /dev/null; then
    echo "‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö Git ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏Å‡πà‡∏≠‡∏ô:"
    if [[ "$OSTYPE" == "darwin"* ]]; then
        echo "   brew install git"
    else
        echo "   sudo apt-get install git"
    fi
    exit 1
fi

# Backup ‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏î‡∏¥‡∏°
echo "üìã ‡∏™‡∏≥‡∏£‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏î‡∏¥‡∏°..."
if [ -f "$HOME/.gitconfig" ] && [ ! -L "$HOME/.gitconfig" ]; then
    cp "$HOME/.gitconfig" "$HOME/.gitconfig.backup.$(date +%Y%m%d_%H%M%S)"
    echo "   ‡∏™‡∏≥‡∏£‡∏≠‡∏á .gitconfig ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢"
fi

if [ -f "$HOME/.gitignore_global" ] && [ ! -L "$HOME/.gitignore_global" ]; then
    cp "$HOME/.gitignore_global" "$HOME/.gitignore_global.backup.$(date +%Y%m%d_%H%M%S)"
    echo "   ‡∏™‡∏≥‡∏£‡∏≠‡∏á .gitignore_global ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢"
fi

# ‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏î‡∏¥‡∏° (‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô regular file)
[ -f "$HOME/.gitconfig" ] && [ ! -L "$HOME/.gitconfig" ] && rm "$HOME/.gitconfig"
[ -f "$HOME/.gitignore_global" ] && [ ! -L "$HOME/.gitignore_global" ] && rm "$HOME/.gitignore_global"

# ‡∏™‡∏£‡πâ‡∏≤‡∏á symbolic links
echo "üîó ‡∏™‡∏£‡πâ‡∏≤‡∏á symbolic links..."
ln -sf "$(pwd)/.gitconfig" "$HOME/.gitconfig"

# ‡∏™‡∏£‡πâ‡∏≤‡∏á global gitignore ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
if [ -f "$(pwd)/.gitignore_global" ]; then
    ln -sf "$(pwd)/.gitignore_global" "$HOME/.gitignore_global"
    # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ global gitignore
    git config --global core.excludesfile ~/.gitignore_global
fi

echo "‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á symbolic links ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢"

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Git user
echo "üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Git user..."
GIT_USER_NAME=$(git config --global user.name 2>/dev/null || echo "")
GIT_USER_EMAIL=$(git config --global user.email 2>/dev/null || echo "")

if [ -z "$GIT_USER_NAME" ] || [ -z "$GIT_USER_EMAIL" ]; then
    echo "‚ö†Ô∏è  ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Git user information"
    echo "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ô‡∏µ‡πâ:"
    echo ""
    echo "git config --global user.name \"Your Name\""
    echo "git config --global user.email \"your.email@example.com\""
    echo ""
else
    echo "‚úÖ Git user information:"
    echo "   Name: $GIT_USER_NAME"
    echo "   Email: $GIT_USER_EMAIL"
fi

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö SSH keys
echo "üîê ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö SSH keys..."
if [ -f "$HOME/.ssh/id_ed25519" ] || [ -f "$HOME/.ssh/id_rsa" ]; then
    echo "‚úÖ ‡∏û‡∏ö SSH keys ‡πÅ‡∏•‡πâ‡∏ß"
    
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö ssh-agent
    if ! ssh-add -l &>/dev/null; then
        echo "üîÑ ‡πÄ‡∏£‡∏¥‡πà‡∏° ssh-agent..."
        eval "$(ssh-agent -s)"
        
        # ‡πÄ‡∏û‡∏¥‡πà‡∏° SSH keys
        if [ -f "$HOME/.ssh/id_ed25519" ]; then
            ssh-add "$HOME/.ssh/id_ed25519" 2>/dev/null || echo "   ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏° id_ed25519"
        fi
        if [ -f "$HOME/.ssh/id_rsa" ]; then
            ssh-add "$HOME/.ssh/id_rsa" 2>/dev/null || echo "   ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏° id_rsa"
        fi
    else
        echo "‚úÖ ssh-agent ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß"
    fi
    
    # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠
    echo "üîç ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ SSH..."
    if ssh -T git@github.com -o ConnectTimeout=5 2>&1 | grep -q "successfully authenticated"; then
        echo "‚úÖ GitHub SSH ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥"
    else
        echo "‚ö†Ô∏è  GitHub SSH ‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô"
    fi
    
    if ssh -T git@gitlab.com -o ConnectTimeout=5 2>&1 | grep -q "Welcome to GitLab"; then
        echo "‚úÖ GitLab SSH ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥"
    else
        echo "‚ö†Ô∏è  GitLab SSH ‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô"
    fi
else
    echo "‚ö†Ô∏è  ‡πÑ‡∏°‡πà‡∏û‡∏ö SSH keys"
    echo "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á SSH key:"
    echo ""
    echo "ssh-keygen -t ed25519 -C \"your.email@example.com\""
    echo "ssh-add ~/.ssh/id_ed25519"
    echo "cat ~/.ssh/id_ed25519.pub"
    echo ""
    echo "‡πÅ‡∏•‡πâ‡∏ß‡∏ô‡∏≥ public key ‡πÑ‡∏õ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏ô GitHub/GitLab Settings"
fi

# ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Git ‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç
echo ""
echo "üìã ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Git ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô:"
echo "User Name: $(git config --global user.name || echo 'Not set')"
echo "User Email: $(git config --global user.email || echo 'Not set')"
echo "Default Editor: $(git config --global core.editor || echo 'Default')"
echo "Global Gitignore: $(git config --global core.excludesfile || echo 'Not set')"

echo ""
echo "üéâ ‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Git Configuration ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!"
echo "üìù ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏:"
echo "   - ‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏î‡∏¥‡∏°‡∏ñ‡∏π‡∏Å‡∏™‡∏≥‡∏£‡∏≠‡∏á‡πÑ‡∏ß‡πâ‡πÉ‡∏ô ~/.*.backup.*"
echo "   - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏î‡πâ‡∏ß‡∏¢: git config --list"
echo "   - ‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤ ‡πÉ‡∏´‡πâ‡∏•‡∏ö symbolic links ‡πÅ‡∏•‡∏∞‡πÉ‡∏ä‡πâ‡πÑ‡∏ü‡∏•‡πå backup"
echo ""
echo "üöÄ ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:"
echo "   git config --list     # ‡∏î‡∏π‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"
echo "   ssh -T git@github.com # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö GitHub SSH"
echo "   ssh -T git@gitlab.com # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö GitLab SSH"
