#!/bin/bash

# Complete Dotfiles Setup Script
# ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á dotfiles ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Mac

set -e

echo "üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Dotfiles ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î..."

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö OS
if [[ "$OSTYPE" != "darwin"* ]]; then
    echo "‚ùå Script ‡∏ô‡∏µ‡πâ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞ macOS ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô"
    exit 1
fi

echo "üì± ‡∏ï‡∏£‡∏ß‡∏à‡∏û‡∏ö macOS"

# Function ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏¥‡∏ô‡∏¢‡∏≠‡∏°‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
ask_user() {
    local prompt="$1"
    local default="${2:-n}"
    
    if [ "$default" = "y" ]; then
        read -p "$prompt (Y/n): " -n 1 -r
        echo
        [[ $REPLY =~ ^[Nn]$ ]] && return 1 || return 0
    else
        read -p "$prompt (y/N): " -n 1 -r
        echo
        [[ $REPLY =~ ^[Yy]$ ]] && return 0 || return 1
    fi
}

# ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÑ‡∏î‡πâ
programs=(
    "git:Git Configuration"
    "zsh:Zsh Shell + Oh My Zsh"
    "cursor:Cursor IDE"
    "vscode:VS Code"
    "zed:Zed IDE"
    "terminal:Terminal Configuration"
)

echo ""
echo "üìã ‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÑ‡∏î‡πâ:"
for program in "${programs[@]}"; do
    IFS=':' read -r key desc <<< "$program"
    echo "   - $desc ($key/)"
done

echo ""
echo "üîß ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á:"
echo "   a) ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"
echo "   s) ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏≠‡∏á"
echo "   q) ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°"

read -p "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å (a/s/q): " -n 1 -r choice
echo

case $choice in
    [Aa])
        selected_programs=()
        for program in "${programs[@]}"; do
            IFS=':' read -r key desc <<< "$program"
            selected_programs+=("$key")
        done
        ;;
    [Ss])
        selected_programs=()
        for program in "${programs[@]}"; do
            IFS=':' read -r key desc <<< "$program"
            if ask_user "‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á $desc ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?"; then
                selected_programs+=("$key")
            fi
        done
        ;;
    [Qq])
        echo "üëã ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°"
        exit 0
        ;;
    *)
        echo "‚ùå ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á"
        exit 1
        ;;
esac

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 1 ‡∏ï‡∏±‡∏ß
if [ ${#selected_programs[@]} -eq 0 ]; then
    echo "‚ùå ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡πÉ‡∏î‡πÄ‡∏•‡∏¢"
    exit 1
fi

echo ""
echo "üì¶ ‡∏à‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ô‡∏µ‡πâ:"
for prog in "${selected_programs[@]}"; do
    for program in "${programs[@]}"; do
        IFS=':' read -r key desc <<< "$program"
        if [ "$key" = "$prog" ]; then
            echo "   - $desc"
            break
        fi
    done
done

echo ""
if ! ask_user "‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?" "y"; then
    echo "üëã ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á"
    exit 0
fi

# ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
echo ""
echo "üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á..."

install_count=0
error_count=0

for prog in "${selected_programs[@]}"; do
    echo ""
    echo "üì¶ ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á $prog..."
    
    if [ -d "$prog" ] && [ -f "$prog/setup.sh" ]; then
        cd "$prog"
        if ./setup.sh; then
            echo "‚úÖ ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á $prog ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢"
            ((install_count++))
        else
            echo "‚ùå ‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á $prog ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß"
            ((error_count++))
        fi
        cd ..
    else
        echo "‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö setup script ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö $prog"
        ((error_count++))
    fi
done

# ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á
echo ""
echo "üìä ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á:"
echo "   ‚úÖ ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: $install_count ‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°"
echo "   ‚ùå ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: $error_count ‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°"

if [ $error_count -eq 0 ]; then
    echo ""
    echo "üéâ ‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Dotfiles ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå!"
    echo ""
    echo "üìù ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ñ‡∏±‡∏î‡πÑ‡∏õ:"
    echo "   1. ‡∏£‡∏µ‡∏™‡∏ï‡∏≤‡∏£‡πå‡∏ó Terminal ‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏±‡∏ô 'exec zsh'"
    echo "   2. ‡∏£‡∏µ‡∏™‡∏ï‡∏≤‡∏£‡πå‡∏ó applications ‡∏ó‡∏µ‡πà‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á"
    echo "   3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°"
    echo "   4. ‡∏≠‡πà‡∏≤‡∏ô README.md ‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°"
    echo ""
    echo "üöÄ ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:"
    echo "   exec zsh               # ‡∏£‡∏µ‡πÇ‡∏´‡∏•‡∏î shell"
    echo "   git config --list      # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Git config"
    echo "   code --version         # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö VS Code"
else
    echo ""
    echo "‚ö†Ô∏è  ‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô‡πÅ‡∏ï‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î"
    echo "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö error messages ‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡πÅ‡∏•‡∏∞‡∏•‡∏≠‡∏á‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á"
    echo ""
    echo "üí° ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°:"
    echo "   cd <program_name>/"
    echo "   ./setup.sh"
fi

echo ""
echo "üìö ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°:"
echo "   - ‡∏≠‡πà‡∏≤‡∏ô README.md ‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏´‡∏•‡∏±‡∏Å"
echo "   - ‡∏≠‡πà‡∏≤‡∏ô README.md ‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°"
echo "   - Repository: https://github.com/PattanasakGit/dotfiles"
