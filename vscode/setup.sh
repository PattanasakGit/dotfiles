#!/bin/bash

# VS Code Dotfiles Setup Script
# ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Mac/Linux

set -e

echo "üÜö ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á VS Code Configuration..."

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö OS ‡πÅ‡∏•‡∏∞‡∏Å‡∏≥‡∏´‡∏ô‡∏î path
if [[ "$OSTYPE" == "darwin"* ]]; then
    VSCODE_USER_DIR="$HOME/Library/Application Support/Code/User"
    echo "üì± ‡∏ï‡∏£‡∏ß‡∏à‡∏û‡∏ö macOS"
elif [[ "$OSTYPE" == "linux-gnu"* ]]; then
    VSCODE_USER_DIR="$HOME/.config/Code/User"
    echo "üêß ‡∏ï‡∏£‡∏ß‡∏à‡∏û‡∏ö Linux"
else
    echo "‚ùå ‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö OS ‡∏ô‡∏µ‡πâ"
    exit 1
fi

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ VS Code ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
if ! command -v code &> /dev/null; then
    echo "‚ö†Ô∏è  ‡πÑ‡∏°‡πà‡∏û‡∏ö VS Code CLI"
    echo "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á VS Code ‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô CLI:"
    echo "1. ‡πÄ‡∏õ‡∏¥‡∏î VS Code"
    echo "2. Command Palette (Cmd/Ctrl + Shift + P)"
    echo "3. ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ 'Shell Command: Install code command in PATH'"
    echo "4. ‡∏£‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á"
    echo ""
    echo "‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á VS Code:"
    if [[ "$OSTYPE" == "darwin"* ]]; then
        echo "   brew install --cask visual-studio-code"
    else
        echo "   sudo snap install code --classic"
    fi
    # ‡πÑ‡∏°‡πà exit ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á symbolic links ‡πÑ‡∏î‡πâ
fi

# ‡∏™‡∏£‡πâ‡∏≤‡∏á directory ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ
mkdir -p "$VSCODE_USER_DIR"

# Backup ‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏î‡∏¥‡∏°
echo "üìã ‡∏™‡∏≥‡∏£‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏î‡∏¥‡∏°..."
if [ -f "$VSCODE_USER_DIR/settings.json" ] && [ ! -L "$VSCODE_USER_DIR/settings.json" ]; then
    cp "$VSCODE_USER_DIR/settings.json" "$VSCODE_USER_DIR/settings.json.backup.$(date +%Y%m%d_%H%M%S)"
    echo "   ‡∏™‡∏≥‡∏£‡∏≠‡∏á settings.json ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢"
fi

if [ -f "$VSCODE_USER_DIR/keybindings.json" ] && [ ! -L "$VSCODE_USER_DIR/keybindings.json" ]; then
    cp "$VSCODE_USER_DIR/keybindings.json" "$VSCODE_USER_DIR/keybindings.json.backup.$(date +%Y%m%d_%H%M%S)"
    echo "   ‡∏™‡∏≥‡∏£‡∏≠‡∏á keybindings.json ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢"
fi

if [ -d "$VSCODE_USER_DIR/snippets" ] && [ ! -L "$VSCODE_USER_DIR/snippets" ]; then
    cp -r "$VSCODE_USER_DIR/snippets" "$VSCODE_USER_DIR/snippets.backup.$(date +%Y%m%d_%H%M%S)"
    echo "   ‡∏™‡∏≥‡∏£‡∏≠‡∏á snippets/ ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢"
fi

# ‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏î‡∏¥‡∏°
[ -f "$VSCODE_USER_DIR/settings.json" ] && [ ! -L "$VSCODE_USER_DIR/settings.json" ] && rm "$VSCODE_USER_DIR/settings.json"
[ -f "$VSCODE_USER_DIR/keybindings.json" ] && [ ! -L "$VSCODE_USER_DIR/keybindings.json" ] && rm "$VSCODE_USER_DIR/keybindings.json"
[ -d "$VSCODE_USER_DIR/snippets" ] && [ ! -L "$VSCODE_USER_DIR/snippets" ] && rm -rf "$VSCODE_USER_DIR/snippets"

# ‡∏™‡∏£‡πâ‡∏≤‡∏á symbolic links
echo "üîó ‡∏™‡∏£‡πâ‡∏≤‡∏á symbolic links..."
ln -sf "$(pwd)/settings.json" "$VSCODE_USER_DIR/settings.json"
ln -sf "$(pwd)/keybindings.json" "$VSCODE_USER_DIR/keybindings.json"

# ‡∏™‡∏£‡πâ‡∏≤‡∏á symbolic link ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö snippets ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
if [ -d "$(pwd)/snippets" ]; then
    ln -sf "$(pwd)/snippets" "$VSCODE_USER_DIR/snippets"
fi

echo "‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á symbolic links ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢"

# ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ extensions
if command -v code &> /dev/null; then
    echo "üì¶ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ extensions..."
    code --list-extensions > extensions.txt
    echo "‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ extensions ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢"
    
    # ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á extensions
    echo "üì¶ ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á extensions..."
    while IFS= read -r extension; do
        if [ ! -z "$extension" ] && [[ ! "$extension" =~ ^# ]]; then
            echo "‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á: $extension"
            code --install-extension "$extension" || echo "‚ö†Ô∏è  ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á $extension ‡πÑ‡∏î‡πâ"
        fi
    done < extensions.txt
    echo "‚úÖ ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á extensions ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢"
else
    echo "‚ö†Ô∏è  ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á extensions ‡πÑ‡∏î‡πâ"
    echo "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á extensions ‡πÄ‡∏≠‡∏á‡∏ú‡πà‡∏≤‡∏ô Extensions Marketplace"
fi

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á
echo "üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á..."
if [ -L "$VSCODE_USER_DIR/settings.json" ]; then
    echo "‚úÖ settings.json symbolic link"
else
    echo "‚ùå settings.json ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏õ‡πá‡∏ô symbolic link"
fi

if [ -L "$VSCODE_USER_DIR/keybindings.json" ]; then
    echo "‚úÖ keybindings.json symbolic link"
else
    echo "‚ùå keybindings.json ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏õ‡πá‡∏ô symbolic link"
fi

if [ -L "$VSCODE_USER_DIR/snippets" ]; then
    echo "‚úÖ snippets/ symbolic link"
else
    echo "‚ö†Ô∏è  snippets/ ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏õ‡πá‡∏ô symbolic link"
fi

echo ""
echo "üéâ ‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á VS Code Configuration ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!"
echo "üìù ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏:"
echo "   - ‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏î‡∏¥‡∏°‡∏ñ‡∏π‡∏Å‡∏™‡∏≥‡∏£‡∏≠‡∏á‡πÑ‡∏ß‡πâ‡πÉ‡∏ô $VSCODE_USER_DIR/*.backup.*"
echo "   - ‡∏£‡∏µ‡∏™‡∏ï‡∏≤‡∏£‡πå‡∏ó VS Code ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡∏°‡πà‡∏°‡∏µ‡∏ú‡∏•"
echo "   - ‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤ ‡πÉ‡∏´‡πâ‡∏•‡∏ö symbolic links ‡πÅ‡∏•‡∏∞‡πÉ‡∏ä‡πâ‡πÑ‡∏ü‡∏•‡πå backup"
echo ""
echo "üöÄ ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:"
echo "   code .                    # ‡πÄ‡∏õ‡∏¥‡∏î VS Code ‡πÉ‡∏ô directory ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô"
echo "   code --list-extensions    # ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ extensions ‡∏ó‡∏µ‡πà‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á"
